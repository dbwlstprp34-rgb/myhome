<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <!-- Google Fonts and Icons -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <style>
      :root {
        --primary-color: #5A67D8;
        --primary-light: #C3DAFE;
        --card-bg: #ffffff;
        --body-bg: #F7FAFC;
        --text-color: #2D3748;
        --light-text-color: #4A5568;
        --border-color: #E2E8F0;
        --shadow-color: rgba(0, 0, 0, 0.05);
      }
      body {
        font-family: 'IBM Plex Sans KR', sans-serif;
        background-color: var(--body-bg);
        margin: 0;
        padding: 24px;
        color: var(--text-color);
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
      }
      .container {
        max-width: 1800px;
        margin: 0 auto;
      }
      h1 {
        text-align: center;
        color: var(--primary-color);
        font-weight: 600;
        font-size: 2.8em;
        margin-bottom: 12px;
      }
      .mascot {
        display: block;
        margin: 0 auto 20px auto;
        width: 80px;
        height: 80px;
        color: var(--primary-color);
      }
      .summary {
        text-align: center;
        max-width: 900px;
        margin: 0 auto 48px auto;
        font-size: 1.25em;
        line-height: 1.8;
        color: var(--light-text-color);
      }
      #controls {
        background-color: var(--card-bg);
        padding: 24px;
        border-radius: 16px;
        box-shadow: 0 4px 15px var(--shadow-color);
        margin-bottom: 40px;
        display: flex;
        flex-wrap: wrap;
        gap: 24px;
        align-items: center;
        justify-content: center;
        border: 1px solid var(--border-color);
      }
      .control-group {
        display: flex;
        align-items: center;
        gap: 12px;
      }
      .control-group label {
        font-weight: 500;
        font-size: 1.1em;
      }
      .control-group input, .control-group select, .control-group button {
        padding: 12px 16px;
        border: 1px solid var(--border-color);
        border-radius: 10px;
        font-family: 'IBM Plex Sans KR', sans-serif;
        font-size: 1em;
        transition: all 0.2s ease;
      }
      .control-group input:focus, .control-group select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px var(--primary-light);
        outline: none;
      }
      .control-group button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
      }
      .control-group button:hover {
        background-color: #434190;
        transform: translateY(-2px);
      }
      #dashboard {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 32px;
      }
      .card {
        background-color: var(--card-bg);
        border-radius: 16px;
        box-shadow: 0 4px 15px var(--shadow-color);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        border: 1px solid var(--border-color);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }
      .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
      }
      .card.full-width {
        grid-column: 1 / -1;
      }
      .chart-container { min-height: 400px; display: flex; align-items: center; justify-content: center; padding: 20px; }
      .analysis-container { padding: 24px; background-color: #FBFDFF; font-size: 1.05em; border-top: 1px solid var(--border-color); }
      .analysis-container h3 { margin: 0 0 12px 0; font-weight: 600; font-size: 1.25em; color: var(--primary-color); }
      #student_report_card, #my_position_card { display: none; }
      #student_report_card h3, #my_position_card h3 { display: flex; align-items: center; gap: 10px; }
      .report-content p { margin: 8px 0; font-size: 1.1em; }
      .report-content strong { color: var(--primary-color); font-weight: 500; }
      .loader { border: 8px solid #E2E8F0; border-radius: 50%; border-top: 8px solid var(--primary-color); width: 60px; height: 60px; animation: spin 1.5s linear infinite; }
      @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

      @media (max-width: 1000px) {
        #dashboard {
          grid-template-columns: 1fr;
        }
        h1 {
          font-size: 2.2em;
        }
        .summary {
          font-size: 1.1em;
        }
      }
    </style>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  </head>
  <body>
    <div class="container">
      <h1>학생 성취 수준 대시보드</h1>
      <!-- 공부 캐릭터 SVG 아이콘 -->
      <svg class="mascot" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M21.582,6.344C21.837,5.959,22,5.492,22,5c0-1.654-1.346-3-3-3s-3,1.346-3,3c0,0.492,0.163,0.959,0.418,1.344C13.633,7.398,12,10.003,12,13c0,0,0,0,0,0c-0.001,0-0.001,0-0.002,0c-1.499-2.055-3.481-3.62-5.748-4.474C6.556,8.21,6.786,7.873,6.936,7.488L7,7.426V7.425C7.301,6.634,7.093,5.72,6.46,5.132c-0.781-0.725-1.933-0.669-2.645,0.126l-0.015,0.017C3.12,6.01,3.129,7.186,3.876,7.899L3.88,7.903c0.41,0.38,0.9,0.58,1.402,0.584C5.397,8.491,5.51,8.5,5.623,8.5c1.7,0,3.243,0.852,4.246,2.21C9.641,10.941,9.452,11.205,9.29,11.455c-0.457,0.707-0.71,1.549-0.71,2.445c0,2.83,2.052,5.187,4.767,5.773L12,23.333l1.353-3.666C16.948,18.99,19,16.634,19,13.8C19,10.02,15.708,7.031,21.582,6.344z M5,7c-0.551,0-1-0.449-1-1s0.449-1,1-1s1,0.449,1,1S5.551,7,5,7z M19,6c-0.551,0-1-0.449-1-1s0.449-1,1-1s1,0.449,1,1S19.551,6,19,6z M16,13.8c0,2.09-1.61,3.8-3.6,3.8c-1.99,0-3.6-1.71-3.6-3.8c0-0.619,0.158-1.194,0.435-1.701C10.034,10.61,11.185,9,12.383,9h0.017c1.198,0,2.349,1.61,3.149,3.099C15.842,12.606,16,13.181,16,13.8z M2,13v8c0,0.552,0.448,1,1,1h3c0.552,0,1-0.448,1-1v-8c0-0.552-0.448-1-1-1H3C2.448,12,2,12.448,2,13z M5,20H4v-6h1V20z"/></svg>
      <p class="summary">
        아래 컨트롤 패널을 사용하여 데이터를 필터링하고, 특정 학생을 검색하거나, 자신의 위치를 분석해 보세요. 데이터와 상호작용하며 유의미한 인사이트를 발견할 수 있습니다.
      </p>

      <!-- 컨트롤 패널 -->
      <div id="controls">
        <div class="control-group">
          <label for="bookFilter">도서 보유량 필터:</label>
          <select id="bookFilter"></select>
        </div>
        <div class="control-group">
          <label for="studentIdInput">학생 ID 검색:</label>
          <input type="text" id="studentIdInput" placeholder="예: 10001">
          <button id="searchStudentBtn"><span class="material-icons">search</span>검색</button>
        </div>
        <div class="control-group">
           <label for="myBooksInput">내 보유량 분석:</label>
           <input type="number" id="myBooksInput" placeholder="보유 권수 입력">
           <button id="analyzeMyPositionBtn"><span class="material-icons">analytics</span>분석</button>
        </div>
      </div>

      <!-- 동적 결과 카드 -->
      <div id="dynamic_results" class="dashboard-grid">
        <div class="card full-width" id="student_report_card"></div>
        <div class="card full-width" id="my_position_card"></div>
      </div>

      <!-- 메인 대시보드 -->
      <div id="dashboard">
        <div class="card"><div class="chart-container" id="chart1_div"><div class="loader"></div></div><div class="analysis-container"><h3>도서보유정도 분포</h3><p id="analysis1"></p></div></div>
        <div class="card"><div class="chart-container" id="chart2_div"><div class="loader"></div></div><div class="analysis-container"><h3>국어 성취 수준 분포</h3><p id="analysis2"></p></div></div>
        <div class="card"><div class="chart-container" id="chart3_div"><div class="loader"></div></div><div class="analysis-container"><h3>도서보유정도와 국어 성취도</h3><p id="analysis3"></p></div></div>
        <div class="card"><div class="chart-container" id="chart4_div"><div class="loader"></div></div><div class="analysis-container"><h3>도서보유정도와 과목별 평균</h3><p id="analysis4"></p></div></div>
        <div class="card full-width"><div class="chart-container" id="chart5_div"><div class="loader"></div></div><div class="analysis-container"><h3>도서보유량과 성취도 상관관계</h3><p>이 분산형 차트는 도서 보유량(X축)이 많아질수록 과목 평균 성취도(Y축)가 높아지는 양의 상관관계를 보여줍니다.</p></div></div>
        <div class="card full-width"><div class="chart-container" id="chart6_div"><div class="loader"></div></div><div class="analysis-container"><h3>전체 데이터 테이블</h3><p>아래 표의 헤더를 클릭하여 데이터를 정렬할 수 있습니다.</p></div></div>
      </div>
    </div>

    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart', 'table'], 'language': 'ko'});
      google.charts.setOnLoadCallback(initialize);

      const newColors = ['#5A67D8', '#63B3ED', '#38A169', '#F6E05E', '#ED64A6'];
      
      const commonOptions = {
        fontName: 'IBM Plex Sans KR',
        titleTextStyle: { fontSize: 20, bold: false, color: '#2D3748' },
        legend: { textStyle: { fontSize: 14, color: '#4A5568' } },
        animation: { startup: true, duration: 1000, easing: 'out' },
        chartArea: { width: '85%', height: '75%' }
      };

      function initialize() {
        setupEventListeners();
        populateFilter();
        drawAllCharts('all');
        drawStaticCharts();
      }
      
      function setupEventListeners() {
        document.getElementById('bookFilter').addEventListener('change', (e) => drawAllCharts(e.target.value));
        document.getElementById('searchStudentBtn').addEventListener('click', searchStudent);
        document.getElementById('analyzeMyPositionBtn').addEventListener('click', analyzeMyPosition);
      }
      
      function populateFilter() {
        google.script.run.withSuccessHandler(levels => {
          const select = document.getElementById('bookFilter');
          select.innerHTML = '<option value="all">-- 전체 --</option>';
          levels.forEach(level => {
            const option = document.createElement('option');
            option.value = level;
            option.textContent = level;
            select.appendChild(option);
          });
        }).withFailureHandler(handleFailure).getBookLevels();
      }

      function drawAllCharts(bookFilter) {
        const divsToLoad = ['chart1_div', 'chart2_div', 'chart3_div', 'chart4_div'];
        divsToLoad.forEach(divId => {
            document.getElementById(divId).innerHTML = '<div class="loader"></div>';
        });
        
        google.script.run.withSuccessHandler(data => {
          drawBookDistributionChart(data.bookDistData);
          drawKoreanLevelChart(data.koreanLevelData);
          drawBookKoreanChart(data.bookKoreanData);
          drawSubjectAverageChart(data.subjectAverageData);
        }).withFailureHandler(handleFailure).getAllChartData(bookFilter);
      }

      function drawStaticCharts() {
        drawCorrelationChart();
        drawDataTable();
      }

      function handleFailure(error) { console.error(error.message); }
      
      // --- Chart Drawing Functions ---
      function drawBookDistributionChart(data) {
        const dataTable = google.visualization.arrayToDataTable(data);
        const options = { ...commonOptions, title: '도서보유정도 분포', pieHole: 0.4, colors: newColors };
        new google.visualization.PieChart(document.getElementById('chart1_div')).draw(dataTable, options);
        document.getElementById('analysis1').textContent = "선택된 그룹의 도서 보유량 분포입니다.";
      }
      function drawKoreanLevelChart(data) {
        const dataTable = google.visualization.arrayToDataTable(data);
        const options = { ...commonOptions, title: '국어 성취 수준 분포', legend: { position: 'none' }, colors: [newColors[0]] };
        new google.visualization.ColumnChart(document.getElementById('chart2_div')).draw(dataTable, options);
        document.getElementById('analysis2').textContent = "선택된 그룹의 국어 성취 수준 분포입니다.";
      }
      function drawBookKoreanChart(data) {
        const dataTable = google.visualization.arrayToDataTable(data);
        const options = { ...commonOptions, title: '도서보유정도별 국어 성취 수준', isStacked: true, colors: newColors };
        new google.visualization.ColumnChart(document.getElementById('chart3_div')).draw(dataTable, options);
        document.getElementById('analysis3').textContent = "선택된 그룹의 도서량에 따른 국어 성취도입니다.";
      }
      function drawSubjectAverageChart(data) {
        const dataTable = google.visualization.arrayToDataTable(data);
        const options = { ...commonOptions, title: '도서보유정도별 과목별 평균 성취 수준', vAxis: {title: '평균 성취 수준'}, colors: [newColors[0], newColors[2], newColors[3]] };
        new google.visualization.ColumnChart(document.getElementById('chart4_div')).draw(dataTable, options);
        document.getElementById('analysis4').textContent = "선택된 그룹의 도서량에 따른 과목별 평균 성취도입니다.";
      }
      function drawCorrelationChart() {
        google.script.run.withSuccessHandler(data => {
          const dataTable = google.visualization.arrayToDataTable(data);
          const options = { ...commonOptions, title: '도서보유량과 성취도 상관관계', hAxis: {title: '도서 보유량 (권)'}, vAxis: {title: '과목 평균 성취도'}, legend: 'none', trendlines: { 0: { color: newColors[4] } }, series: { 0: { color: newColors[1] } } };
          new google.visualization.ScatterChart(document.getElementById('chart5_div')).draw(dataTable, options);
        }).withFailureHandler(handleFailure).getCorrelationData();
      }
      function drawDataTable() {
        google.script.run.withSuccessHandler(data => {
            const dataTable = google.visualization.arrayToDataTable(data);
            const table = new google.visualization.Table(document.getElementById('chart6_div'));
            table.draw(dataTable, {showRowNumber: true, width: '100%', height: '100%'});
        }).withFailureHandler(handleFailure).getRawDataForTable();
      }

      // --- Interactive Functions ---
      function searchStudent() {
        const studentId = document.getElementById('studentIdInput').value;
        const card = document.getElementById('student_report_card');
        if (!studentId) {
          card.innerHTML = "<div class='analysis-container'><h3><span class='material-icons'>error</span>검색 오류</h3><p>학생 ID를 입력해주세요.</p></div>";
          card.style.display = 'block';
          return;
        }
        card.innerHTML = '<div class="loader-container" style="display:flex; justify-content:center; padding: 20px;"><div class="loader"></div></div>';
        card.style.display = 'block';
        google.script.run.withSuccessHandler(student => {
          if (student) {
            card.innerHTML = `
              <div class="analysis-container">
                <h3><span class="material-icons">person</span>학생 개별 리포트 (ID: ${student.id})</h3>
                <div class="report-content">
                  <p><strong>도서 보유량:</strong> ${student.bookLevel}</p>
                  <p><strong>국어 성취도:</strong> ${student.korean}</p>
                  <p><strong>수학 성취도:</strong> ${student.math}</p>
                  <p><strong>영어 성취도:</strong> ${student.english}</p>
                </div>
              </div>`;
          } else {
            card.innerHTML = `<div class="analysis-container"><h3><span class="material-icons">search_off</span>검색 결과 없음</h3><p>ID '${studentId}'에 해당하는 학생을 찾을 수 없습니다.</p></div>`;
          }
        }).withFailureHandler(handleFailure).getStudentDataById(studentId);
      }

      function analyzeMyPosition() {
        const myBooks = parseInt(document.getElementById('myBooksInput').value);
        const card = document.getElementById('my_position_card');
        if (isNaN(myBooks) || myBooks < 0) {
          card.innerHTML = "<div class='analysis-container'><h3><span class='material-icons'>error</span>입력 오류</h3><p>유효한 도서 보유량을 숫자로 입력해주세요.</p></div>";
          card.style.display = 'block';
          return;
        }

        let myGroup = '';
        if (myBooks <= 10) myGroup = '0-10권';
        else if (myBooks <= 25) myGroup = '11-25권';
        else if (myBooks <= 100) myGroup = '26-100권';
        else if (myBooks <= 200) myGroup = '101-200권';
        else myGroup = '200권 초과';

        card.innerHTML = '<div class="loader-container" style="display:flex; justify-content:center; padding: 20px;"><div class="loader"></div></div>';
        card.style.display = 'block';

        google.script.run.withSuccessHandler(data => {
          const allAverages = data.subjectAverageData;
          const totalAvg = { kor: 0, math: 0, eng: 0, count: 0 };
          let groupAvg = { kor: 0, math: 0, eng: 0 }; 

          allAverages.slice(1).forEach(row => {
            totalAvg.kor += row[1];
            totalAvg.math += row[2];
            totalAvg.eng += row[3];
            totalAvg.count++;
            if (row[0] === myGroup) {
              groupAvg = { kor: row[1], math: row[2], eng: row[3] };
            }
          });
          
          const finalTotalAvg = {
             kor: totalAvg.count > 0 ? (totalAvg.kor / totalAvg.count).toFixed(2) : 0,
             math: totalAvg.count > 0 ? (totalAvg.math / totalAvg.count).toFixed(2) : 0,
             eng: totalAvg.count > 0 ? (totalAvg.eng / totalAvg.count).toFixed(2) : 0
          };

          card.innerHTML = `
            <div class="analysis-container">
              <h3><span class="material-icons">analytics</span>내 보유량 분석 결과</h3>
              <div class="report-content">
                <p>보유하신 <strong>${myBooks}권</strong>은(는) '<strong>${myGroup}</strong>' 그룹에 속합니다. (해당 그룹에 학생이 없는 경우 평균은 0으로 표시됩니다)</p>
                <p><strong>나의 그룹 평균:</strong> 국어 ${groupAvg.kor.toFixed(2)} | 수학 ${groupAvg.math.toFixed(2)} | 영어 ${groupAvg.eng.toFixed(2)}</p>
                <p><strong>전체 학생 평균:</strong> 국어 ${finalTotalAvg.kor} | 수학 ${finalTotalAvg.math} | 영어 ${finalTotalAvg.eng}</p>
              </div>
            </div>`;

        }).withFailureHandler(handleFailure).getAllChartData('all');
      }
    </script>
  </body>
</html>

